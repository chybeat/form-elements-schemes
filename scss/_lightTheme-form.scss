/**
CSS rules to colorize elements in light schemes
*/
////
//// Dark schema input colors colors
////
@use "_colorVars.scss" as color;
@use "_icons.scss" as ico;

/*Light scheme theme*/
@media screen and (prefers-color-scheme: light) {
	:root {
		//Global pure colors
		--white: #{color.$white};
		--black: #{color.$black};

		//Backgrounds colors
		--main-background-color: #{color.$main-light-background-color};
		--focus-background-color: #{color.$focus-light-background-color};

		//Border colors
		--border-color: #{color.$border-light-color};
		--highlight-border-color: #{color.$highlight-light-border-color};
		--highlight-border-color-opaque: #{color.$highlight-light-border-color-opaque};

		//Fonts colors
		--main-font-color: #{color.$main-light-font-color};

		//scroll arrows icons
		--scroll-arrowUp: #{ico.svg(arrowUp, color.$main-light-font-color)};
		--scroll-arrowDown: #{ico.svg(arrowDown, color.$main-light-font-color)};
		--scroll-arrowLeft: #{ico.svg(arrowLeft, color.$main-light-font-color)};
		--scroll-arrowRight: #{ico.svg(arrowRight, color.$main-light-font-color)};
		--scroll-corner: #{ico.svg(cornerBottomRight, color.$main-light-font-color)};
	}

	.dark-scheme {
		color-scheme: dark;

		//Global pure colors
		--white: #{color.$black};
		--black: #{color.$white};

		//Backgrounds colors
		--main-background-color: #{color.$main-dark-background-color};
		--focus-background-color: #{color.$focus-dark-background-color};

		//Border colors
		--border-color: #{color.$border-dark-color};
		--highlight-border-color: #{color.$highlight-dark-border-color};
		--highlight-border-color-opaque: #{color.$highlight-dark-border-color-opaque};

		//Fonts colors
		--main-font-color: #{color.$main-dark-font-color};

		//scroll arrows icons
		--scroll-arrowUp: #{ico.svg(arrowUp, color.$highlight-dark-border-color)};
		--scroll-arrowDown: #{ico.svg(arrowDown, color.$highlight-dark-border-color)};
		--scroll-arrowLeft: #{ico.svg(arrowLeft, color.$highlight-dark-border-color)};
		--scroll-arrowRight: #{ico.svg(arrowRight, color.$highlight-dark-border-color)};
		--scroll-corner: #{ico.svg(cornerBottomRight, color.$highlight-dark-border-color)};
	}

	html {
		color-scheme: light;
	}

	//General border and backgorund colors
	button,
	select,
	input,
	textarea {
		background-color: var(--main-background-color);
		border-color: var(--border-color);
		color: var(--main-font-color);

		&:focus,
		&:focus-within,
		&:focus-visible {
			color: var(--main-font-color) !important;
			background-color: var(--focus-background-color);
			border-color: var(--highlight-border-color);
		}

		&:not(:disabled) {
			&:hover:not(:focus) {
				border-color: var(--highlight-border-color);

				&::placeholder {
					color: var(--highlight-border-color-opaque);
				}
			}
		}
	}

	button,
	input[type="button"],
	input[type="reset"],
	input[type="file"],
	input[type="image"],
	input[type="submit"] {
		&:hover {
			background-color: var(--focus-background-color);
		}

		&:active {
			background-color: var(--highlight-border-color);
			border-color: var(--main-font-color);
			color: var(--white);
		}
	}

	//scrollable elements
	select,
	textarea {
		// scroll bar color for Firefox
		scrollbar-color: var(--highlight-border-color-opaque) var(--main-background-color); //1st thumb, 2nd track

		/* Track */
		&::-webkit-scrollbar-track {
			background-color: var(--main-background-color);
		}

		/* Handle */
		&::-webkit-scrollbar-thumb {
			background: var(--highlight-border-color-opaque);
		}

		/* Handle on hover */
		&::-webkit-scrollbar-thumb:hover {
			background: var(--highlight-border-color);
		}

		&::-webkit-scrollbar-button:vertical:start:decrement,
		&::-webkit-scrollbar-button:vertical:end:increment,
		&::-webkit-scrollbar-button:horizontal:start:decrement,
		&::-webkit-scrollbar-button:horizontal:end:increment {
			&:active {
				background-color: var(--border-color);
			}
		}

		//arrow up for vertical scroll button
		&::-webkit-scrollbar-button:vertical:start:decrement {
			background-image: var(--scroll-arrowUp)
		}

		//arrow down for vertical scroll button
		&::-webkit-scrollbar-button:vertical:end:increment {
			background-image: var(--scroll-arrowDown);
		}

		//arrow left for horizontal scroll button
		&::-webkit-scrollbar-button:horizontal:start:decrement {
			background-image: var(--scroll-arrowLeft);
		}

		//arrow right for horizontal scroll button
		&::-webkit-scrollbar-button:horizontal:end:increment {
			background-image: var(--scroll-arrowRight)
		}

		//corner resizer
		&::-webkit-resizer {
			background-image: var(--scroll-corner);
			background-color: transparent;
		}

		//track witouth buttons
		::-webkit-scrollbar-track-piece:no-button {
			background-color: var(--main-background-color);
		}
	}

	fieldset {
		border-color: var(--border-color);
	}

	input[type='range'] {
		@supports (-moz-appearance:none) {
			background-color: transparent;
		}

		&::-webkit-slider-runnable-track {
			background-color: var(--main-background-color);
			outline-color: var(--border-color);
		}

		&::-webkit-slider-thumb {
			background-color: var(--highlight-border-color-opaque);
		}

		&::-moz-range-track {
			background-color: var(--main-background-color);
		}

		&::-moz-range-thumb {
			background-color: var(--highlight-border-color-opaque);
		}

		&:focus,
		&:active,
		&:hover {
			@supports (-moz-appearance:none) {
				background-color: transparent;
			}

			&::-webkit-slider-runnable-track {
				background-color: var(--focus-background-color);
			}

			&::-moz-range-track {
				background-color: var(--focus-background-color);
			}

			&::-moz-range-thumb {
				background-color: var(--highlight-border-color);
			}

			&::-webkit-slider-thumb {
				background-color: var(--highlight-border-color);
			}
		}
	}

	input[type="checkbox"] {

		&:not(.switch) {
			&::before {
				background-color: var(--main-background-color);
				outline-color: var(--border-color);
			}

			&:hover {
				&::before {
					background-color: var(--focus-background-color);
					outline-color: var(--highlight-border-color);
				}
			}

			&:checked {
				&::after {
					border-color: var(--main-font-color);
				}

				&::before {
					background-color: var(--focus-background-color);
				}
			}
		}

		&.switch {
			&::after {
				background-color: var(--border-color);
			}

			&::before {
				background-color: var(--main-background-color);
				outline-color: var(--border-color);
			}

			&:hover {
				&::before {
					background-color: var(--focus-background-color);
					outline-color: var(--highlight-border-color);

				}
			}

			&:checked {
				&::after {
					background-color: var(--highlight-border-color);
				}

				&::before {
					background-color: var(--focus-background-color);
				}
			}
		}
	}

	progress {

		&:indeterminate {
			background-image: repeating-linear-gradient(-45deg,
					transparent,
					transparent 1rem,
					var(--highlight-border-color-opaque) 1rem,
					var(--highlight-border-color-opaque) 2rem);
			border-color: var(--highlight-border-color);
		}

		@supports (-moz-appearance:none) {
			background-color: var(--focus-background-color);
			outline-color: var(--highlight-border-color-opaque);
		}

		&::-webkit-progress-bar {
			background-color: #{color.$focus-dark-background-color};
			background-color: var(--focus-background-color);
			outline-color: var(--highlight-border-color-opaque);
		}

		&::-webkit-progress-value {
			background-color: var(--highlight-border-color-opaque);
		}

		&::-moz-progress-bar {
			background-color: var(--highlight-border-color-opaque);
		}
	}

	select {
		background-color: var(--main-background-color);

		&:-moz-focusring {
			text-shadow: 0 0 0 var(--white);
		}

		&:focus,
		&:focus-within,
		&:focus-visible {
			background-color: var(--focus-background-color);

			optgroup {
				background-color: var(--main-background-color);

				option {
					background-color: var(--focus-background-color);
				}
			}
		}

		optgroup {
			color: var(--white);

			option {
				background-color: var(--main-background-color);
			}
		}

		option {
			background-color: var(--focus-background-color);
			color: var(--main-font-color);

			&:checked {

				&:not(:focus),
				&:not(:focus-within),
				&:not(:focus-visible) {
					background-color: var(--highlight-border-color-opaque);
					color: var(--main-font-color);
				}

				&:focus,
				&:focus-within,
				&:focus-visible {
					background-color: var(--highlight-border-color);
					color: var(--main-font-color);
				}
			}
		}
	}
}
